#!/usr/bin/env groovy

def seperator60 = '\u2739' * 60
def seperator20 = '\u2739' * 20

def job_name = "${env.JOB_NAME}"
def job_number = "${env.JOB_NUMBER}"

// PROVISION AND DESTROY PARAMETERS 
properties([
  parameters([
   choice(
     description: "Determine cluster action",
     choices: "ProvisionCluster\nDestroyCluster",
     name: "ClusterAction"
   ),  
  ])
])


node('misc') {

      stage ('Pull Repo') {
        echo "${seperator60}\n${seperator20} Get Repository \n${seperator60}"
        deleteDir()
        checkout scm
      }
      
      stage ('Spinup EKS') {
        if (ClusterAction == "ProvisionCluster"){
        echo "${seperator60}\n${seperator20} Spinning Up Cluster \n${seperator60}"
            withCredentials([usernamePassword(credentialsId: 'cicd_token', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]){
              dir('tf_eks_cluster'){
                 sh """
                    terraform init
                    terraform plan -out=create.tfplan
                    //terraform apply create.tfplan
                 """
              }
            }
        } else {
           if (ClusterAction == "DestroyCluster"){
             echo "${seperator60}\n${seperator20} Destroying Cluster \n${seperator60}"
             withCredentials([usernamePassword(credentialsId: 'cicd-token', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]){
               dir('tf_eks_cluster'){
                sh """
                 terraform init
                 terraform destroy -force
                 """
               }   
             }
           }
        }
      }
}

